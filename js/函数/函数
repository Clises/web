## js中的函数
  ### 立即执行函数

```js

/*函数声明*/
function name() {
    
}
    /*函数表达式*/
    var name=function () {
        
    }
    /*匿名函数*/
    function() {
        
    }
/*函数声明和函数表达式的区别*/
    /*
    * 函数声明需要js代码解析到当前这行才可以调用
    * 函数表达式后加()可以立即执行调用，函数声明不可以，只能以name()调用
    * */
    /********举例子*******/
    fName();
    function fName(){...}//正确，函数声明提升，所以 fName()可以写在函数声明之前。

    fName();
    var fName=function(){...}//错误，函数表达式不具备函数声明提升。

    var fName=function(){...}();//正确，函数表达式后边加()立即调用函数。

    function fName(){...}();//错误，函数声明必须用fName()调用。
    //这行代码被解析为两部分： 1函数声明 function fName(){...}, 2分组表达式(),这表达式有误，因为括号内没有表达式，

    function (){...}();//匿名函数不可以这么调用，因为function(){...}被当做了声明，声明不可以直接()调用。
    //立即执行函数

    /*
    *常见写法:
    * (function(){...})()
      (function(){...}())
    *
    * */
 var aa=function() {
            var a='';
            for (var b=0;b<10;b++){
                a+=b;
            }
            return a;
        }()
    console.log(aa)

```






