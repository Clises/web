<?php
/**
 * Created by PhpStorm.
 * User: 15318
 * Date: 2017/10/9
 * Time: 9:44
 */
/*
 * 抽象类：指的是用关键字 abstract修饰的类是抽象类。
 * 1、abstract修饰的类，
 * 2、抽象类当中的方法可以是抽象的，也可以是普通的。
 * 3、抽象类不能够实例化，没有构造方法，
 * 4、如果说子类继承了抽象类，第一件事就是重写父类中的抽象方法。
 * 5、抽象方法：指的的就是没有方法体的方法，就是抽象方法，
    6、用abstract修饰的类一定是抽象类，
    7、有抽象方法的类一定是抽象类，严格意义上是错的。
8、抽象类存在的目的是为了解决当有多个父类具有共同的属性和行为，
把这些共有的属性和行为抽出来，单独写一个类，这个类就是抽象类。

 */
abstract class Animal{
    public $name="";
    public  $age="";
    public  $sex="";

    function hao(){

}
    function eat(){

    }
    //抽象方法
    abstract public  function haha($name="",$age=90);  //抽象方法没有方法体。
}
//子类继承抽象类，当有红色下划线 ，意思是说父类有抽象方法，子类必须去实现父类的抽象方法，
class  Dog extends  Animal{
//    就是子类实现的父类的抽象方法，重写。
//子类必须去实现抽象方法。
//方法的重写和方法的重载有什么区别？
    /*
     *重写的目的就是重写一遍，进一步实现。
     * 重载：方法名一致，其他的不一致。
     * */
    public function haha($name = "", $age = 90)
    {
        // TODO: Implement haha() method.
    }

    function hao()
    {
        parent::hao(); // TODO: Change the autogenerated stub
    }


}

class  Doctor extends  Animal{
    public function haha($name = "", $age = 90)
    {
        // TODO: Implement haha() method.
    }

}
//子类继承抽象类的一种写法。